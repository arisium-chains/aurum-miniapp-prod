services:
  # Main Next.js application (development mode)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - FACE_DETECTION_SERVICE=http://face-detection-service:8001
      - FACE_EMBEDDING_SERVICE=http://face-embedding-service:8002
      - PORT=3000
    depends_on:
      - redis
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
      - ./public/models:/app/public/models:ro
    restart: unless-stopped
    profiles:
      - dev

  # Node.js Scoring Service (development mode)
  scoring-service:
    build:
      context: .
      dockerfile: Dockerfile.scoring-service.dev
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - PORT=3000
      - HOSTNAME=0.0.0.0
    depends_on:
      - redis
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist
    restart: unless-stopped
    profiles:
      - dev

  # Redis for development
  redis:
    image: redis:7-alpine
    ports:
      - "6381:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    profiles:
      - dev

  # Qdrant vector database (development)
  qdrant:
    image: qdrant/qdrant:v1.7.0
    ports:
      - "6334:6333"
      - "6335:6334"
    volumes:
      - qdrant_dev_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
    restart: unless-stopped
    profiles:
      - dev

  # ML Face Scoring API Service (development)
  ml-api:
    build:
      context: ./ml-face-score-api
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - PORT=3000
      - FACE_DETECTION_SERVICE=http://face-detection-service:8001
      - FACE_EMBEDDING_SERVICE=http://face-embedding-service:8002
    depends_on:
      - redis
    volumes:
      - ./ml-face-score-api:/app
      - /app/node_modules
      - /app/dist
      - ./ml-face-score-api/temp:/app/temp
      - ./ml-face-score-api/models:/app/models:ro
    restart: unless-stopped
    profiles:
      - dev

  # Rust ML Services (development)
  face-detection-service:
    build:
      context: /Users/poomcryptoman/Arisium/aurum-circle-new/aurum-ml-services
      dockerfile: face-detection/Dockerfile.dev
    ports:
      - "8001:8001"
    environment:
      - PORT=8001
      - MODEL_PATH=/app/models/face_detection_model.onnx
      - LOG_LEVEL=debug
      - RUST_LOG=debug
    volumes:
      - ./public/models:/app/models:ro
    restart: unless-stopped
    profiles:
      - dev

  face-embedding-service:
    build:
      context: /Users/poomcryptoman/Arisium/aurum-circle-new/aurum-ml-services
      dockerfile: face-embedding/Dockerfile.dev
    ports:
      - "8002:8002"
    environment:
      - PORT=8002
      - MODEL_PATH=/app/models/face_embedding_model.onnx
      - LOG_LEVEL=debug
      - RUST_LOG=debug
    volumes:
      - ./public/models:/app/models:ro
    restart: unless-stopped
    profiles:
      - dev

volumes:
  redis_dev_data:
  qdrant_dev_storage:
