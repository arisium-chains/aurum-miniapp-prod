# Multi-stage Docker build for Aurum Circle Attractiveness Engine
# Optimized for Fly.io deployment with Real ML Models (TensorFlow.js + MediaPipe + ArcFace)

FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat curl unzip python3 py3-pip build-base
WORKDIR /app

# Install dependencies including ML packages
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Download and setup ML models during build
RUN mkdir -p public/models

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Set environment variables for build
ENV NEXT_TELEMETRY_DISABLED 1
ENV NODE_ENV production

# Build the application
RUN npm run build

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

# Create system user for security
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built application
COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# Create directories for persistent data
RUN mkdir -p /app/data/embeddings && chown -R nextjs:nodejs /app/data

# Install runtime dependencies for ML processing
RUN apk add --no-cache \
    python3 \
    py3-pip \
    py3-numpy \
    curl \
    wget \
    && rm -rf /var/cache/apk/*

# Copy ML models from builder stage
COPY --from=builder --chown=nextjs:nodejs /app/public/models ./public/models

# Create model configuration
RUN echo '{\
  "face_detection": {\
    "model_path": "/app/public/models/face_detection/model.json",\
    "input_size": [192, 192],\
    "confidence_threshold": 0.7,\
    "backend": "webgl"\
  },\
  "face_embedding": {\
    "model_path": "/app/public/models/arcface/model.json",\
    "input_size": [112, 112],\
    "output_size": 512,\
    "backend": "webgl"\
  },\
  "version": "1.0.0",\
  "deployment": "fly.io",\
  "last_updated": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"\
}' > ./public/models/model_config.json

# Set up health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3000/api/attractiveness/stats || exit 1

USER nextjs

EXPOSE 3000

ENV PORT 3000
ENV HOSTNAME "0.0.0.0"

# Start the application
CMD ["node", "server.js"]